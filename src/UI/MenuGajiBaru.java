/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package UI;
import java.awt.geom.RoundRectangle2D;
import DataBase.DbConnection; // Sesuaikan dengan nama package DbConnection Anda
import java.awt.Dimension;
import java.awt.Font;
import java.sql.*;
import javax.swing.JLabel;
import javax.swing.table.DefaultTableModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.JTableHeader;
import javax.swing.table.TableColumn;
import javax.swing.table.TableColumnModel;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.ArrayList;
import java.util.List;
/**
 *
 * @author nabil
 */
public class MenuGajiBaru extends javax.swing.JFrame {
int xMouse, yMouse;

private javax.swing.JTextField txtEditIdCrew;
    private javax.swing.JTextField txtEditTanggalGaji; // DIGANTI DARI JDateChooser
    private javax.swing.JTextField txtEditJumlahGaji;
    private javax.swing.JTextField txtEditBonus;
    private javax.swing.JTextField txtEditNomorRekening;
    private javax.swing.JTextField txtEditTanggalPembayaran; // DIGANTI DARI JDateChooser
    private javax.swing.JTextField txtEditKeterangan;
    private javax.swing.JButton jButtonSimpanEdit; // Tombol untuk menyimpan perubahan
    private javax.swing.JButton jButtonBatalEdit; // Tombol untuk membatalkan edit (opsional)
    private javax.swing.JLabel lblHiddenIdGaji; // Untuk menyimpan ID gaji yang sedang diedit (atau JTextField tersembunyi)

    // Untuk format tanggal string (misalnya "YYYY-MM-DD")
    private SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
    /**
     * Creates new form MenuGajiBaru
     */
    public MenuGajiBaru() {
        initComponents();
        setSize(1320, 720); // Tetapkan ukuran tetap
        setMinimumSize(new Dimension(1320, 720));
        setMaximumSize(new Dimension(1320, 720));
        setPreferredSize(new Dimension(1320, 720));
        setResizable(false);
        setLocationRelativeTo(null);
        setShape(new RoundRectangle2D.Double(0, 0, getWidth(), getHeight(), 50, 50));
        loadTableGaji(); // Panggil fungsi untuk load konfigurasi tabel
        populateTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        roundedPanel10 = new Custom.RoundedPanel();
        jLabel11 = new javax.swing.JLabel();
        jButton40 = new javax.swing.JButton();
        jButton41 = new javax.swing.JButton();
        jButton42 = new javax.swing.JButton();
        jButton43 = new javax.swing.JButton();
        jButton44 = new javax.swing.JButton();
        jSeparator9 = new javax.swing.JSeparator();
        roundedPanel6 = new Custom.RoundedPanel();
        jLabel10 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        roundedPanel5 = new Custom.RoundedPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jSeparator3 = new javax.swing.JSeparator();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                formMouseDragged(evt);
            }
        });
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                formMousePressed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        roundedPanel10.setBackground(new java.awt.Color(46, 51, 55));

        jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gambar/150 no back.png"))); // NOI18N
        jLabel11.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel11MouseClicked(evt);
            }
        });

        jButton40.setBackground(new java.awt.Color(251, 200, 42));
        jButton40.setFont(new java.awt.Font("SansSerif", 3, 12)); // NOI18N
        jButton40.setText("Kalender Event");
        jButton40.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jButton40.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton40ActionPerformed(evt);
            }
        });

        jButton41.setBackground(new java.awt.Color(251, 200, 42));
        jButton41.setFont(new java.awt.Font("SansSerif", 3, 12)); // NOI18N
        jButton41.setText("Daftar Paket");
        jButton41.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jButton41.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton41ActionPerformed(evt);
            }
        });

        jButton42.setBackground(new java.awt.Color(251, 200, 42));
        jButton42.setFont(new java.awt.Font("SansSerif", 3, 12)); // NOI18N
        jButton42.setText("Inventaris");
        jButton42.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jButton42.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton42ActionPerformed(evt);
            }
        });

        jButton43.setBackground(new java.awt.Color(251, 200, 42));
        jButton43.setFont(new java.awt.Font("SansSerif", 3, 12)); // NOI18N
        jButton43.setText("Karyawan");
        jButton43.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jButton43.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton43ActionPerformed(evt);
            }
        });

        jButton44.setBackground(new java.awt.Color(251, 200, 42));
        jButton44.setFont(new java.awt.Font("SansSerif", 3, 12)); // NOI18N
        jButton44.setText("Penggajian");
        jButton44.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jButton44.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton44ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout roundedPanel10Layout = new javax.swing.GroupLayout(roundedPanel10);
        roundedPanel10.setLayout(roundedPanel10Layout);
        roundedPanel10Layout.setHorizontalGroup(
            roundedPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(roundedPanel10Layout.createSequentialGroup()
                .addGap(0, 17, Short.MAX_VALUE)
                .addGroup(roundedPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jButton40, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton41, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton42, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton43, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton44, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSeparator9, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11))
                .addGap(15, 15, 15))
        );
        roundedPanel10Layout.setVerticalGroup(
            roundedPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(roundedPanel10Layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(jLabel11)
                .addGap(55, 55, 55)
                .addComponent(jSeparator9, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addComponent(jButton40, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(60, 60, 60)
                .addComponent(jButton41, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(60, 60, 60)
                .addComponent(jButton42, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(60, 60, 60)
                .addComponent(jButton43, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(60, 60, 60)
                .addComponent(jButton44, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(58, Short.MAX_VALUE))
        );

        roundedPanel6.setBackground(new java.awt.Color(46, 51, 55));
        roundedPanel6.setRoundBottomRight(25);
        roundedPanel6.setRoundTopRight(25);

        jLabel10.setFont(new java.awt.Font("SansSerif", 3, 20)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(251, 190, 1));
        jLabel10.setText("Moria Sound Lighting");

        javax.swing.GroupLayout roundedPanel6Layout = new javax.swing.GroupLayout(roundedPanel6);
        roundedPanel6.setLayout(roundedPanel6Layout);
        roundedPanel6Layout.setHorizontalGroup(
            roundedPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(roundedPanel6Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel10)
                .addContainerGap(31, Short.MAX_VALUE))
        );
        roundedPanel6Layout.setVerticalGroup(
            roundedPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, roundedPanel6Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel10)
                .addContainerGap())
        );

        jLabel3.setFont(new java.awt.Font("SansSerif", 3, 35)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(46, 51, 55));
        jLabel3.setText("P E N G G A J I A N   K A R Y A W A N");

        jButton2.setBackground(new java.awt.Color(251, 190, 1));
        jButton2.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        jButton2.setText("X");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        roundedPanel5.setBackground(new java.awt.Color(124, 124, 124));
        roundedPanel5.setRoundTopLeft(25);
        roundedPanel5.setRoundTopRight(25);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jButton7.setFont(new java.awt.Font("SansSerif", 3, 12)); // NOI18N
        jButton7.setForeground(new java.awt.Color(46, 51, 55));
        jButton7.setText("Tambah");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton8.setFont(new java.awt.Font("SansSerif", 3, 12)); // NOI18N
        jButton8.setForeground(new java.awt.Color(46, 51, 55));
        jButton8.setText("Edit");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jButton9.setFont(new java.awt.Font("SansSerif", 3, 12)); // NOI18N
        jButton9.setForeground(new java.awt.Color(46, 51, 55));
        jButton9.setText("Hapus");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout roundedPanel5Layout = new javax.swing.GroupLayout(roundedPanel5);
        roundedPanel5.setLayout(roundedPanel5Layout);
        roundedPanel5Layout.setHorizontalGroup(
            roundedPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(roundedPanel5Layout.createSequentialGroup()
                .addContainerGap(24, Short.MAX_VALUE)
                .addGroup(roundedPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(roundedPanel5Layout.createSequentialGroup()
                        .addComponent(jButton7)
                        .addGap(12, 12, 12)
                        .addComponent(jButton8)
                        .addGap(12, 12, 12)
                        .addComponent(jButton9))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 968, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(25, Short.MAX_VALUE))
        );
        roundedPanel5Layout.setVerticalGroup(
            roundedPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, roundedPanel5Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(roundedPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton9)
                    .addComponent(jButton8)
                    .addComponent(jButton7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 517, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(229, 229, 229)
                .addComponent(roundedPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(roundedPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel3)
                        .addGap(208, 208, 208))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jSeparator3)
                            .addComponent(roundedPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 35, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(roundedPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(17, 17, 17)
                .addComponent(jLabel3)
                .addGap(1, 1, 1)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(7, 7, 7)
                .addComponent(roundedPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(roundedPanel10, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void loadTableGaji() {
        String[] kolom = {"Select", "ID", "ID Crew", "Tanggal Gaji", "Jumlah Gaji", "Bonus", "Nomor Rekening", "Tanggal Pembayaran", "Keterangan", "Created At", "Updated At"};
        DefaultTableModel model = new DefaultTableModel(null, kolom) {
            @Override
            public Class<?> getColumnClass(int column) {
                if (column == 0) return Boolean.class; // Kolom "Select" adalah Boolean
                if (column == 1) return Integer.class; // ID Gaji
                if (column == 2) return Integer.class; // ID Crew
                // Untuk kolom lain, biarkan DefaultTableModel yang menentukan atau tentukan secara eksplisit jika perlu
                return super.getColumnClass(column);
            }

            @Override
            public boolean isCellEditable(int row, int column) {
                return column == 0; // Hanya kolom "Select" yang editable
            }
        };
        jTable1.setModel(model);
        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment(JLabel.CENTER);

        for (int i = 1; i < jTable1.getColumnCount(); i++) {
            if (i != 8) { // Kolom keterangan (indeks 8) mungkin lebih baik rata kiri
                jTable1.getColumnModel().getColumn(i).setCellRenderer(centerRenderer);
            }
        }
        jTable1.setBackground(new java.awt.Color(255, 255, 255)); // Menggunakan warna dari desainer
        jTable1.setGridColor(new java.awt.Color(255, 255, 255)); // Menggunakan warna dari desainer

        JTableHeader header = jTable1.getTableHeader();
        header.setFont(new Font("SansSerif", Font.BOLD | Font.ITALIC, 12));
        ((DefaultTableCellRenderer) header.getDefaultRenderer()).setHorizontalAlignment(JLabel.CENTER);

        TableColumnModel columnModel = jTable1.getColumnModel();
        TableColumn selectColumn = columnModel.getColumn(0);
        selectColumn.setPreferredWidth(50);
        selectColumn.setMaxWidth(50);
        selectColumn.setMinWidth(50);
        selectColumn.setResizable(false); // Checkbox
        columnModel.getColumn(1).setPreferredWidth(30); // ID
        columnModel.getColumn(2).setPreferredWidth(70);  // ID Crew (Integer)
        columnModel.getColumn(3).setPreferredWidth(80); // Tanggal Gaji
        columnModel.getColumn(4).setPreferredWidth(120); // Jumlah Gaji
        columnModel.getColumn(5).setPreferredWidth(80);  // Bonus
        columnModel.getColumn(6).setPreferredWidth(150); // Nomor Rekening (String)
        columnModel.getColumn(7).setPreferredWidth(100); // Tanggal Pembayaran
        columnModel.getColumn(8).setPreferredWidth(200); // Keterangan
        columnModel.getColumn(9).setPreferredWidth(150); // Created At
        columnModel.getColumn(10).setPreferredWidth(150);// Updated At
    }

    // Fungsi untuk mengisi data ke tabel dari database
    public void populateTable() {
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        model.setRowCount(0); // Kosongkan tabel sebelum mengisi ulang

        // Menggunakan nama tabel "gaji"
        String query = "SELECT id_gaji, id_crew, tanggal_gaji, jumlah_gaji, bonus, nomor_rekening, tanggal_pembayaran, keterangan, created_at, updated_at FROM gaji ORDER BY created_at DESC";
        try (Connection conn = DbConnection.getConnection();
             PreparedStatement pst = conn.prepareStatement(query);
             ResultSet rs = pst.executeQuery()) {

            while (rs.next()) {
                Object[] row = new Object[11];
                row[0] = false; // Kolom "Select" (checkbox)
                row[1] = rs.getInt("id_gaji");
                row[2] = rs.getInt("id_crew");
                row[3] = rs.getDate("tanggal_gaji");
                row[4] = rs.getDouble("jumlah_gaji");
                row[5] = rs.getDouble("bonus");
                row[6] = rs.getString("nomor_rekening");
                row[7] = rs.getDate("tanggal_pembayaran");
                row[8] = rs.getString("keterangan");
                row[9] = rs.getTimestamp("created_at");
                row[10] = rs.getTimestamp("updated_at");
                model.addRow(row);
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Error fetching data: " + e.getMessage(), "Database Error", JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
        }
    }
    
                                              

    // Metode baru untuk menyimpan perubahan setelah edit
    private void jButtonSimpanEditActionPerformed(java.awt.event.ActionEvent evt) {                                            
        try {
            int idGaji = Integer.parseInt(lblHiddenIdGaji.getText()); // Ambil ID gaji dari label tersembunyi
            int idCrew = Integer.parseInt(txtEditIdCrew.getText());
            
            // Konversi String dari JTextField ke java.sql.Date untuk Tanggal Gaji
            java.sql.Date sqlTanggalGaji = null;
            String tanggalGajiText = txtEditTanggalGaji.getText().trim();
            if (!tanggalGajiText.isEmpty()) {
                try {
                    Date parsedDate = dateFormat.parse(tanggalGajiText);
                    sqlTanggalGaji = new java.sql.Date(parsedDate.getTime());
                } catch (ParseException e) {
                    JOptionPane.showMessageDialog(this, "Format Tanggal Gaji tidak valid. Gunakan format YYYY-MM-DD.", "Validasi Error", JOptionPane.WARNING_MESSAGE);
                    return;
                }
            } else {
                JOptionPane.showMessageDialog(this, "Tanggal Gaji tidak boleh kosong.", "Validasi Error", JOptionPane.WARNING_MESSAGE);
                return;
            }

            double jumlahGaji = Double.parseDouble(txtEditJumlahGaji.getText());
            double bonus = Double.parseDouble(txtEditBonus.getText());
            String nomorRekening = txtEditNomorRekening.getText();
            
            // Konversi String dari JTextField ke java.sql.Date untuk Tanggal Pembayaran
            java.sql.Date sqlTanggalPembayaran = null;
            String tanggalPembayaranText = txtEditTanggalPembayaran.getText().trim();
            if (!tanggalPembayaranText.isEmpty()) {
                try {
                    Date parsedDate = dateFormat.parse(tanggalPembayaranText);
                    sqlTanggalPembayaran = new java.sql.Date(parsedDate.getTime());
                } catch (ParseException e) {
                    JOptionPane.showMessageDialog(this, "Format Tanggal Pembayaran tidak valid. Gunakan format YYYY-MM-DD (biarkan kosong jika tidak ada).", "Validasi Error", JOptionPane.WARNING_MESSAGE);
                    return;
                }
            }
            // Jika tanggalPembayaranText kosong, sqlTanggalPembayaran akan tetap null, sesuai kebutuhan

            String keterangan = txtEditKeterangan.getText();

            // Query UPDATE ke database
            String updateQuery = "UPDATE gaji SET id_crew = ?, tanggal_gaji = ?, jumlah_gaji = ?, bonus = ?, nomor_rekening = ?, tanggal_pembayaran = ?, keterangan = ?, updated_at = NOW() WHERE id_gaji = ?";
            
            try (Connection conn = DbConnection.getConnection();
                 PreparedStatement pst = conn.prepareStatement(updateQuery)) {
                
                pst.setInt(1, idCrew);
                pst.setDate(2, sqlTanggalGaji);
                pst.setDouble(3, jumlahGaji);
                pst.setDouble(4, bonus);
                pst.setString(5, nomorRekening);
                pst.setDate(6, sqlTanggalPembayaran); // Ini akan menerima null jika kosong
                pst.setString(7, keterangan);
                pst.setInt(8, idGaji);

                int affectedRows = pst.executeUpdate();

                if (affectedRows > 0) {
                    JOptionPane.showMessageDialog(this, "Data gaji berhasil diupdate.", "Sukses", JOptionPane.INFORMATION_MESSAGE);
                    populateTable(); // Refresh tabel setelah update
                    // Opsional: Sembunyikan/bersihkan komponen edit setelah simpan
                    clearEditFields();
                    // panelEditGaji.setVisible(false);
                } else {
                    JOptionPane.showMessageDialog(this, "Gagal mengupdate data gaji. Data tidak ditemukan.", "Error", JOptionPane.ERROR_MESSAGE);
                }

            } catch (SQLException e) {
                JOptionPane.showMessageDialog(this, "Error database saat update: " + e.getMessage(), "Database Error", JOptionPane.ERROR_MESSAGE);
                e.printStackTrace();
            }

        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Format angka tidak valid untuk ID Crew, Jumlah Gaji, atau Bonus.", "Input Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    // Metode untuk membersihkan field edit (opsional)
    private void clearEditFields() {
        lblHiddenIdGaji.setText("");
        txtEditIdCrew.setText("");
        txtEditTanggalGaji.setText("");
        txtEditJumlahGaji.setText("");
        txtEditBonus.setText("");
        txtEditNomorRekening.setText("");
        txtEditTanggalPembayaran.setText("");
        txtEditKeterangan.setText("");
    }

    private void jButtonBatalEditActionPerformed(java.awt.event.ActionEvent evt) {                                                 
        clearEditFields();
        // panelEditGaji.setVisible(false); // Sembunyikan panel edit jika ada
    }
    
    private void jLabel11MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel11MouseClicked
        BerandaBaru menu = new BerandaBaru();
        menu.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jLabel11MouseClicked

    private void jButton40ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton40ActionPerformed
        MenuJadwal jadwal = new MenuJadwal();
        jadwal.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton40ActionPerformed

    private void jButton41ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton41ActionPerformed
        DaftarPaketBaru paket = new DaftarPaketBaru();
        paket.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton41ActionPerformed

    private void jButton42ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton42ActionPerformed
        MenuInventarisBaru inventaris = new MenuInventarisBaru();
        inventaris.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton42ActionPerformed

    private void jButton43ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton43ActionPerformed
        DaftarKaryawanBaru crew = new DaftarKaryawanBaru();
        crew.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton43ActionPerformed

    private void jButton44ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton44ActionPerformed
        MenuGajiBaru gaji = new MenuGajiBaru();
        gaji.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton44ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // Membuka Form Tambah Gaji
        // Pastikan Anda memiliki kelas FormTambahGaji.java sebagai JDialog atau JFrame
        FormTambahGaji formTambah = new FormTambahGaji(this, true, this);
        formTambah.setVisible(true);
        // Setelah FormTambahGaji ditutup, refresh data di tabel MenuGaji
        populateTable();
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        int selectedRow = jTable1.getSelectedRow();
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Pilih satu baris untuk diedit.", "Peringatan", JOptionPane.WARNING_MESSAGE);
            return;
        }

        // Dapatkan data dari baris yang dipilih
        int idGaji = (Integer) jTable1.getValueAt(selectedRow, 1);
        int idCrew = (Integer) jTable1.getValueAt(selectedRow, 2);
        // Ambil Date dari tabel, lalu format ke String untuk JTextField
        Date tanggalGajiDate = (Date) jTable1.getValueAt(selectedRow, 3);
        String tanggalGajiStr = (tanggalGajiDate != null) ? dateFormat.format(tanggalGajiDate) : "";
        
        double jumlahGaji = (Double) jTable1.getValueAt(selectedRow, 4);
        double bonus = (Double) jTable1.getValueAt(selectedRow, 5);
        String nomorRekening = (String) jTable1.getValueAt(selectedRow, 6);
        
        // Ambil Date dari tabel, lalu format ke String untuk JTextField
        Date tanggalPembayaranDate = (Date) jTable1.getValueAt(selectedRow, 7);
        String tanggalPembayaranStr = (tanggalPembayaranDate != null) ? dateFormat.format(tanggalPembayaranDate) : "";
        
        String keterangan = (String) jTable1.getValueAt(selectedRow, 8);
        
        // Isi komponen UI edit dengan data yang didapatkan
        lblHiddenIdGaji.setText(String.valueOf(idGaji)); // Simpan ID Gaji di label tersembunyi
        txtEditIdCrew.setText(String.valueOf(idCrew));
        txtEditTanggalGaji.setText(tanggalGajiStr); // <--- Isi JTextField dengan string tanggal
        txtEditJumlahGaji.setText(String.valueOf(jumlahGaji));
        txtEditBonus.setText(String.valueOf(bonus));
        txtEditNomorRekening.setText(nomorRekening);
        txtEditTanggalPembayaran.setText(tanggalPembayaranStr); // <--- Isi JTextField dengan string tanggal
        txtEditKeterangan.setText(keterangan);

        // Tampilkan panel/komponen edit jika sebelumnya disembunyikan
        // Misalnya: panelEditGaji.setVisible(true);
        // Atau atur fokus ke salah satu field edit
        txtEditIdCrew.requestFocusInWindow();
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        int rowCount = model.getRowCount();
        boolean anySelected = false;

        List<Integer> idsToDelete = new ArrayList<>();
        for (int i = 0; i < rowCount; i++) {
            Boolean isSelected = (Boolean) model.getValueAt(i, 0);
            if (isSelected != null && isSelected) {
                idsToDelete.add((Integer) model.getValueAt(i, 1)); // Kolom ID (id_gaji) adalah kolom ke-1
                anySelected = true;
            }
        }

        if (!anySelected) {
            JOptionPane.showMessageDialog(this, "Pilih setidaknya satu gaji untuk dihapus.", "Peringatan", JOptionPane.WARNING_MESSAGE);
            return;
        }

        int confirm = JOptionPane.showConfirmDialog(this, "Apakah Anda yakin ingin menghapus gaji yang dipilih?", "Konfirmasi Hapus", JOptionPane.YES_NO_OPTION);
        if (confirm == JOptionPane.YES_OPTION) {
            // Menggunakan nama tabel "gaji"
            String deleteQuery = "DELETE FROM gaji WHERE id_gaji = ?";
            try (Connection conn = DbConnection.getConnection();
                 PreparedStatement pst = conn.prepareStatement(deleteQuery)) {
                boolean allSuccess = true;
                for (Integer id : idsToDelete) {
                    pst.setInt(1, id);
                    int affectedRows = pst.executeUpdate();
                    if (affectedRows == 0) {
                        allSuccess = false;
                        // Mungkin tidak perlu pesan error per ID jika banyak, cukup satu di akhir
                        System.err.println("Gagal menghapus gaji dengan ID: " + id + ". Tidak ditemukan atau sudah terhapus.");
                    }
                }
                if (allSuccess && !idsToDelete.isEmpty()) {
                    JOptionPane.showMessageDialog(this, "Gaji yang dipilih berhasil dihapus.", "Sukses", JOptionPane.INFORMATION_MESSAGE);
                } else if (!idsToDelete.isEmpty()){
                    JOptionPane.showMessageDialog(this, "Beberapa atau semua gaji gagal dihapus atau tidak ditemukan.", "Peringatan", JOptionPane.WARNING_MESSAGE);
                }
                populateTable(); // Refresh tabel setelah penghapusan
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(this, "Error saat menghapus data: " + e.getMessage(), "Database Error", JOptionPane.ERROR_MESSAGE);
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_jButton9ActionPerformed

    private void formMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMousePressed
    xMouse = evt.getX();
    yMouse = evt.getY();
    }//GEN-LAST:event_formMousePressed

    private void formMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseDragged
        this.setLocation(evt.getXOnScreen() - xMouse, evt.getYOnScreen() - yMouse);
    }//GEN-LAST:event_formMouseDragged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MenuGajiBaru.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MenuGajiBaru.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MenuGajiBaru.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MenuGajiBaru.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MenuGajiBaru().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton40;
    private javax.swing.JButton jButton41;
    private javax.swing.JButton jButton42;
    private javax.swing.JButton jButton43;
    private javax.swing.JButton jButton44;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator9;
    private javax.swing.JTable jTable1;
    private Custom.RoundedPanel roundedPanel10;
    private Custom.RoundedPanel roundedPanel5;
    private Custom.RoundedPanel roundedPanel6;
    // End of variables declaration//GEN-END:variables
}
